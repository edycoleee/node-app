//request.rest
### 1. Contoh : Endpoint API : GET '/'
GET http://localhost:3000/

### 1a. Fungsi tes untuk register POST /api/users >> VALID
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "test",
"password": "rahasia",
"name": "test"
}


### 1b. Fungsi tes untuk register >> ERROR Validation
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "",
"password": "",
"name": ""
}


### 1c. Fungsi tes untuk register >> ERROR Duplicate 
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "test",
"password": "rahasia",
"name": "test"
}

### 2a. Fungsi tes untuk login >> ERROR Validation
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "",
"password": ""
}

### 2b. Fungsi tes untuk login >> Valid
POST http://localhost:3000/api/users/login
Content-Type: application/json

{ 
"username": "test",
"password": "rahasia"
}

### 2c. Fungsi tes untuk login >> Password salah, User Benar
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "test",
"password": "salah"
}

### 2d. Fungsi tes untuk login >> Password salah, User Salah
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "test",
"password": "salah"
}

### 3a. Fungsi tes untuk GET USER >> ERROR Validation
GET http://localhost:3000/api/users/current
Content-Type: application/json
Authorization:  

{
"username": "test",
"password": "rahasia"
}

### 3b. Fungsi tes untuk GET USER >> Valid
### REGISTER
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "test",
"password": "rahasia",
"name": "test"
}


### LOGIN >> token
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "test",
"password": "salah"
}

### GET dengan token
GET http://localhost:3000/api/users/current
Content-Type: application/json
Authorization: d6b46fdb-4063-4a4e-abd5-59738abc417a

{ 
"username": "",
"password": ""
}

### 4a. Fungsi tes untuk PATCH USER name password>> VALID
### REGISTER
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "test",
"password": "rahasia",
"name": "test"
}


### LOGIN >> token
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "test",
"password": "rahasia"
}

### PATCH
PATCH http://localhost:3000/api/users/current
Content-Type: application/json
Authorization: 24f95c56-ec36-4773-bab3-b447e0be572c 

{
"name": "Edy",
"password": "rahasialagi"
}

### 4b. Fungsi tes untuk PATCH USER name >> VALID
PATCH http://localhost:3000/api/users/current
Content-Type: application/json
Authorization: 24f95c56-ec36-4773-bab3-b447e0be572c 

{
"name": "Edy Lagi"
}

### 4c. Fungsi tes untuk PATCH USER name >> VALID
PATCH http://localhost:3000/api/users/current
Content-Type: application/json
Authorization: 24f95c56-ec36-4773-bab3-b447e0be572c 

{
"password": "rahasialagi"
}

### 4c. Fungsi tes untuk PATCH USER name >> INVALID
PATCH http://localhost:3000/api/users/current
Content-Type: application/json
Authorization: salah 

### 5a. Fungsi tes untuk DELETE USER name password>> VALID
### REGISTER 
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "test",
"password": "rahasia",
"name": "test"
}


### LOGIN >> token
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "test",
"password": "rahasia"
}

### LOGOUT
DELETE http://localhost:3000/api/users/logout
Content-Type: application/json
Authorization: e20cc8b8-212e-44b5-b8b0-c370d0bac357 

{
"username": "test"
}

### 5b. Fungsi tes untuk PATCH USER name >> VALID 
DELETE http://localhost:3000/api/users/logout
Content-Type: application/json
Authorization: salah

{
"username": "test"
}

### 1a. Fungsi tes untuk POST Contoh>> VALID
POST http://localhost:3000/api/contoh/public
Content-Type: application/json

{
"username": "edy"
}

### 1b. Fungsi tes untuk POST Contoh >> INVALID
POST http://localhost:3000/api/contoh/public
Content-Type: application/json

{
"username": "test"
}

### 1. GET contoh dengan auth tanpa token
GET http://localhost:3000/api/contoh/current
Content-Type: application/json

{ 
"username": "",
"password": ""
}

### 2. GET contoh dengan auth dg token benar
GET http://localhost:3000/api/contoh/current
Content-Type: application/json
Authorization: rahasia

{ 
"username": "",
"password": ""
}

### 3. GET contoh dengan auth dg token salah
GET http://localhost:3000/api/contoh/current
Content-Type: application/json
Authorization: salah

{ 
"username": "",
"password": ""
}



### SEMUA TEST DENGAN LOGIN >> TOKEN
### REGISTER
POST http://localhost:3000/api/users
Content-Type: application/json

{
"username": "test",
"password": "rahasia",
"name": "test"
}


### LOGIN >> token
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
"username": "test",
"password": "rahasia"
}

### GET dengan token
GET http://localhost:3000/api/users/current
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{ 
"username": "",
"password": ""
}

### 11. Fungsi tes untuk CREATE Contact  >> Valid
### POST Contact dengan token >> valid 
POST http://localhost:3000/api/contacts
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name" : "test-first",
  "last_name" : "test-last",
  "email" : "test@mail.com",
  "phone" : "12345667"
  }

### POST Contact dengan token >> invalid 
POST http://localhost:3000/api/contacts
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name" : "",
  "last_name" : "test-last",
  "email" : "test@mail.com",
  "phone" : "123456678888888888888"
  }


### 12. Fungsi tes untuk GET Contact  >> Valid
### REGISTER >> LOGIN >> TOKEN
### POST CONTACT >> ID >> GET CONTACT ID
### POST Contact dengan token >> valid 
POST http://localhost:3000/api/contacts
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name" : "test-first",
  "last_name" : "test-last",
  "email" : "test@mail.com",
  "phone" : "12345667"
  }

### GET Contact id dengan token >> valid 
GET http://localhost:3000/api/contacts/37
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name" : "test-first",
  "last_name" : "test-last",
  "email" : "test@mail.com",
  "phone" : "12345667"
  }

### GET Contact id+1 dengan token >> invalid 
GET http://localhost:3000/api/contacts/38
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name" : "",
  "last_name" : "test-last",
  "email" : "test@mail.com",
  "phone" : "123456678888888888888"
  }

// 13. Fungsi tes untuk UPDATE Contact
// REGISTER >> LOGIN >> TOKEN
// POST CONTACT >> ID >> GET CONTACT ID
### UPDATE KONTAK >> VALID
PUT http://localhost:3000/api/contacts/38
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name": "Edy",
  "last_name": "Cole",
  "email": "edy@gmail.com",
  "phone": "09999999"
}


### UPDATE KONTAK >> INVALID
PUT http://localhost:3000/api/contacts/38
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name": "",
  "last_name": "Cole",
  "email": "",
  "phone": "09999999"
}
### UPDATE KONTAK >> NOT FOUND >> ID + 1
PUT http://localhost:3000/api/contacts/39
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

{
  "first_name": "Edy",
  "last_name": "Cole",
  "email": "edy@gmail.com",
  "phone": "09999999"
}

// 14. Fungsi tes untuk REMOVE Contact
// REGISTER >> LOGIN >> TOKEN
// POST CONTACT >> ID >> GET CONTACT ID
### REMOVE KONTAK >> VALID
DELETE http://localhost:3000/api/contacts/38
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

### REMOVE KONTAK >> NOT FOUND >> ID + 1
DELETE http://localhost:3000/api/contacts/39
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

// 15. Fungsi tes untuk SEARCH Contact
// REGISTER >> LOGIN >> TOKEN
// POST CONTACT >> ID >> GET CONTACT ID
### SEARCH KONTAK >> WITHOUT PARAMETER
GET http://localhost:3000/api/contacts
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

### SEARCH KONTAK >> TO PAGE 2
GET http://localhost:3000/api/contacts?page=2
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

### SEARCH KONTAK >> USE NAME
GET http://localhost:3000/api/contacts?name=test1
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

### SEARCH KONTAK >> USE EMAIL
GET http://localhost:3000/api/contacts?email=test1
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b

### SEARCH KONTAK >> USE PHONE
GET http://localhost:3000/api/contacts?phone=0809000001
Content-Type: application/json
Authorization: 44f85213-7f03-4ebf-952b-e127eaaaf98b